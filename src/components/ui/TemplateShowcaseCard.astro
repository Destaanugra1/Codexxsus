---
import { twMerge } from 'tailwind-merge';
import { Icon } from 'astro-icon/components';
import Button from './Button.astro';
import Image from '../common/Image.astro';

export interface Props {
  title: string;
  description: string;
  image: string;
  category?: string;
  callToAction?: {
    text: string;
    href: string;
    icon?: string;
    target?: string;
  };
  classes?: Record<string, string>;
}

const { title, description, image, category = '', callToAction, classes = {} } = Astro.props;

const {
  container: containerClass = '',
  card: cardClass = '',
  image: imageClass = '',
  content: contentClass = '',
  title: titleClass = '',
  description: descriptionClass = '',
} = classes;
---

<div class={twMerge('relative w-full h-full transition-all duration-300', containerClass)}>
  <div
    class={twMerge(
      'group flex flex-col h-full rounded-xl overflow-hidden shadow-lg bg-white dark:bg-slate-900 hover:shadow-xl transition-all duration-300',
      cardClass
    )}>
    <!-- Image Section with Overlay on Hover -->
    <div class='relative overflow-hidden aspect-[4/3] w-full'>
      <Image
        src={image}
        alt={title}
        class={twMerge(
          'object-cover w-full h-full transition-transform duration-700 group-hover:scale-110',
          imageClass
        )}
        width={800}
        height={600}
        widths={[400, 800]}
        sizes='(max-width: 768px) 100vw, 50vw'
        loading='lazy'
      />

      <!-- Overlay with action button on hover -->
      <div
        class='absolute inset-0 bg-gradient-to-t from-black/80 via-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-300 flex flex-col justify-end p-6'>
        {
          callToAction && (
            <Button
              variant='primary'
              {...callToAction}
              class='w-full md:w-auto transform translate-y-4 group-hover:translate-y-0 transition-all duration-300'>
              {callToAction.icon && <Icon name={callToAction.icon} class='w-5 h-5 mr-1 -ml-1.5 rtl:-mr-1.5 rtl:ml-1' />}
              {callToAction.text}
            </Button>
          )
        }
      </div>

      <!-- Category Badge -->
      {
        category && (
          <div class='absolute top-4 right-4 bg-primary text-white text-xs font-semibold py-1 px-3 rounded-full'>
            {category}
          </div>
        )
      }
    </div>

    <!-- Content Section -->
    <div class={twMerge('p-5 flex-grow flex flex-col', contentClass)}>
      <h3 class={twMerge('text-xl font-bold mb-2 text-gray-900 dark:text-white', titleClass)}>{title}</h3>
      <p class={twMerge('text-muted flex-grow', descriptionClass)}>{description}</p>
    </div>
  </div>
</div>
